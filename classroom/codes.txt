 st.balloons()
 --
 # Main Page
selected = option_menu(menu_title=None,options=["Employee","Company","IFM Route"],icons=["person-vcard-fill","building","building"],orientation="horizontal")

if selected == "Employee":


------------------------------
url="https://script.google.com/macros/s/AKfycbzsHJ5paT0EguvW4cYxpTtGGoY3MyO4qd7_7pzIfMbNHb6WjJLz9xzJNcABTWa97K6_YQ/exec?fname="+str(fullNum)+"&faname="+str(fatherName)+"&mname="+str(motherName)+"&age="+str(age)+"&gender="+str(gender)+"&nlty="+str(nationality)+"&add="+str(adress)+"&mail="+str(email)+"&mob="+str(mno)
req.get(url)

------------------------------
        date = st.date_input(
            label="Rentang Waktu", 
            min_value=min_date, max_value=max_date,
            value=[min_date, max_date],
            on_change=on_change
        )


----------------------------------------
create a file in the immediate directory

Path(__file__).parents[1] / 'dashboard/day_clear.csv'


----------------------------------------
import requests

# response = requests.get(csvlink)

# if response.status_code == 200:
#     readcsv = pd.read_csv(csvlink,dtype={'Average': str}) #pandas reads CSV file
# else:
#     print("Failed to fetch CSV data")

# readcsv = pd.read_csv(csvlink,dtype={'Average': str}) #pandas reads CSV file

-----------------------------------------------------------------
DELETE A ROW OR COLUMN

user_id_value = '12345'

df = df.drop(df[df['user_id'] == user_id_value].index) #ROW
df.to_csv('your_file.csv', index=False)
-----
delete columns
df.drop(columns=['Biology','Chemistry'], inplace=True) #COLUMN #inplace mean direct change to original file
-----
delete rows
# Drop the specified rows
df.drop(index=[1, 3, 5], inplace=True)




To delete all rows in a DataFrame, you can use the drop() method with the index of all rows. Similarly, to delete all columns, you can use the drop() method with the column names. Here's how you can do it:

python
Copy code
import pandas as pd

# Create a sample DataFrame
df = pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6], 'C': [7, 8, 9]})

# Delete all rows
df.drop(df.index, inplace=True)  # This will remove all rows

# Delete all columns
df.drop(columns=df.columns, inplace=True)  # This will remove all columns
--------------------------------------------------------------