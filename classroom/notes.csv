Note,Note Title
"import streamlit as st
import pandas as pd

# Streamlit sidebar for actions
action = st.sidebar.radio(""Select Action"", [""Create Note"", ""View Notes"", ""Update Note""])

if action == ""Create Note"":
    st.header(""Create a New Note"")

    # Text area to input a new note
    new_note = st.text_area(""Enter your new note:"")

    if st.button(""Save Note""):
        # Create a new CSV file with the new note
        notes = pd.DataFrame({""Note"": [new_note]})
        notes.to_csv(""notes.csv"", index=False)
        st.success(""Note saved successfully!"")

elif action == ""View Notes"":
    st.header(""View Notes"")

    try:
        # Read the existing notes from the CSV file
        notes = pd.read_csv(""notes.csv"")

        if not notes.empty:
            # Display all notes in a list
            selected_note = st.selectbox(""Select a note to view:"", notes[""Note""].values)
            st.write(f""Selected Note: {selected_note}"")
        else:
            st.warning(""No notes available. Create some notes first."")
    except FileNotFoundError:
        st.warning(""No notes available. Create some notes first."")

elif action == ""Update Note"":
    st.header(""Update Note"")

    try:
        # Read the existing notes from the CSV file
        notes = pd.read_csv(""notes.csv"")

        if not notes.empty:
            # Display all notes in a list
            selected_note = st.selectbox(""Select a note to update:"", notes[""Note""].values)
            updated_note = st.text_area(""Edit the selected note:"", selected_note)

            if st.button(""Save Updated Note""):
                # Update the selected note in the CSV file
                notes.loc[notes[""Note""] == selected_note, ""Note""] = updated_note
                notes.to_csv(""notes.csv"", index=False)
                st.success(""Note updated successfully!"")
        else:
            st.warning(""No notes available. Create some notes first."")
    except FileNotFoundError:
        st.warning(""No notes available. Create some notes first."")
",
"The error message ""KeyError: 'Note Title'"" indicates that the ""Note Title"" column is not found in the DataFrame. To fix this issue, make sure that you have correctly defined the ""Note Title"" column when creating a new note. Here's the modified code with some additional checks to handle this issue:


THANK YOU

IndexError: index 0 is out of bounds for axis 0 with size 0
Traceback:
File ""C:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\streamlit\runtime\scriptrunner\script_runner.py"", line 552, in _run_script
    exec(code, module.__dict__)
File ""C:\Users\USER\Desktop\stre


HELLO",Cluster way
"This code ensures that both a title and note content are provided when creating a new note, and it also handles cases where the ""Note Title"" column is not found in the DataFrame. Make sure that the CSV file format is correct and contains the expected columns.",Immediately resume
"This code will select the row(s) where the 'Note Title' matches the selected title and then extract the 'Note' column from that row using iloc[0] to get the content. It's a valid and concise way to retrieve the note content based on the selected title.


Thanks ",My plans soon
"        #----------------------
        filter_content = notes[notes['Note Title'] == selected_note_title]
        content = filter_content['Note'].iloc[0]
        updated_note = st.text_area(""Edit the selected note:"",content)

        #--------------------------",New note
